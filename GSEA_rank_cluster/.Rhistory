print("hello world")
print("hello world")
print("hello world")
x = c(1,2,3)
y = c(1,2,3)
plot(x,y)
iris
plot(iris$Sepal.Length,iris$Sepal.Width)
install.packages("installr")
library(installr)
BiocManager
plot(1,1)
install.packages("BiocManager")
BiocManager::install('DESeq2')
library( "DESeq2" )
warnings()
R.version
R.version
?BiocManager
BiocManager
library('BiocManager')
BiocManager::install("DESeq2")
.libPaths()
install.packages('DESeq2')
#File used to understand foreach command for parallel processing of clusters
library('flexclust') # handles weighted clustering
setwd("~/Documents/GitHub/BioinfGroupProject/GSEA_rank_cluster")
#set.seed(255)
#read in and format counts (z_scores)
z_scores = read.csv("data_expression_median.txt", sep = "\t", stringsAsFactors = FALSE, header = TRUE)
map = z_scores[,c(1,2)]
inst_names = colnames(z_scores)[3:length(colnames(z_scores))]
z_scores = z_scores[,-2]
z_scores = as.data.frame(t(z_scores), stringsAsFactors = FALSE)
names(z_scores) = map[,1]
z_scores = z_scores[-1,]
z_scores = as.data.frame(apply(z_scores, 2, as.numeric))
name_fix = c()
for(name in inst_names){name_fix = c(name_fix,substr(name,11,nchar(name)-3))}
row.names(z_scores) = name_fix
#read in ranked file, extract names
ranking = read.csv('ranked_gene_list.tsv', sep = "\t")
ranking = ranking$NAME
rz = z_scores[,colnames(z_scores) %in% ranking] #get genes from count included in ranking
rk = ranking[ranking %in% colnames(z_scores)] # get ranked genes included in counts
rz_order = rz[,rk] # order columns by ranking
bestDev = 200
wg <- dnorm(seq(1, ncol(rz_order)), mean = ncol(rz_order)/2, sd = bestDev)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
wg = range01(wg)
simpleClst = function(seed, k_clust,data, weights =wg){ #run clustering with specified seed and k
set.seed(seed)
cls = cclust(data, method = "hardcl", k=k_clust, weights = weights)
return(cls)
}
bestk9 = simpleClst(9, 9, rz_order)
get_indvs = function(clust, cnum){
names(which(clusters(clust) == cnum))
}
write.table(get_indvs(bestk9,3), "c3.txt", sep = "\n", row.names = F, col.names = F, quote = T)
write.table(rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,3))], "notc3.txt", sep = "\n", row.names = F, col.names = F, quote = T)
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not",filenm, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table(rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))], antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
setwd("~/Documents/GitHub/BioinfGroupProject/GSEA_rank_cluster")
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not",filenm, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table(rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))], antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
write.table(x=2, "k9/demo.txt")
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not",filenm, sep="")
#write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
#write.table(rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))], antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not",filenm, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
#write.table(rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))], antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not",filenm, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not_c",cnum, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 2:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not_c",cnum, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 1:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not_c",cnum, sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 1:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not_c",cnum,".txt" sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 1:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not_c",cnum,".txt", sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for(cnum in 1:9){
filenm = paste("k9/","c",cnum,".txt", sep = "")
antifilenm = paste("k9/","not_c",cnum,".txt", sep="")
write.table(get_indvs(bestk9,cnum), filenm, sep = "\n", row.names = F, col.names = F, quote = T)
write.table((rownames(rz_order)[!(rownames(rz_order)%in% get_indvs(bestk9,cnum))]), antifilenm, sep = "\n", row.names = F, col.names = F, quote = T)
}
for (cnum in 1:9){
print(length(get_indvs(bestk9,cnum)))
}
sizes = c()
for (cnum in 1:9){
sizes = c(sizes,length(get_indvs(bestk9,cnum)))
}
hist(sizes)
plot(wg, ncol(rz_order))
ranking
plot(wg, 1:length(ranking))
length(ranking)
length(wg)
plot(wg, 1:length(wg))
plot(1:length(wg), wg)
plot(1:length(wg), wg, xlab = "Ranking in gene list", ylab = "weight", main = "Weighting (sd = 200)")
plot(1:length(wg), wg, xlab = "Gene list ranking", ylab = "Weight", main = "Weighting (sd = 200)")
